<?xml version="1.0" encoding="UTF-8"?>
<!-- 整个配置文件的根节点,可以有一个或者多个bean -->
<!-- xmlns="http://www.springframework.org/schema/beans" 默认命名空间：表示未使用其他命名空间的所有标签的默认命名空间 -->
<!-- xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi标准命名空间，用于指定义自定义命名空间的schema文件，声明后就可以使用 
	schemaLocation 属性了 -->
<!-- xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd" 
	此处可以不配置，可以用来引用schema在本地的副本 -->
<!-- xmlns:context="http://www.springframework.org/schema/context" 启用自动扫描或注解装配时的命名空间 -->
<!-- xmlns:aop="http://www.springframework.org/schema/aop" 启用aop功能是的命名空间 -->
<!-- xmlns:tx="http://www.springframework.org/schema/tx" 启用声明事务是的命名空间 -->
<!-- xsi:schemaLocation 声明每个命名空间对应的配置文档的位置 -->
<!-- xmlns:jee="http://www.springframework.org/schema/jee"jee标签用来处理javaee标准相关的问题，例如查询一个jndi对象以及定义一个ejb的引用等 -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
        http://www.springframework.org/schema/jee
        http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.directwebremoting.org/schema/spring-dwr
        http://www.directwebremoting.org/schema/spring-dwr-3.0.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.1.xsd"
	xmlns:default-lazy-init="true">
	<!-- xmlns:default-lazy-init="true" Spring在启动的时候不加载数据库. -->


	<description>Spring Service Configration</description>

	<!-- 开启注解处理器 使用此配置则不需要再手动配置依赖关系 -->
	<context:annotation-config />

	<!-- scan service class with @components ；这里的扫描包名可以按需修改 配置自动扫描需要扫描的位置 -->
	<context:component-scan base-package="com.xiaochuan" />

	<!-- 预加载属性文件,使用PropertyPlaceholderConfigurer进行解析,方便在下发调用 形如${jdbc.username} -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:application.properties</value>
			</list>
		</property>
	</bean>
	<!-- 开启基于@aspectJ切面的注解处理器 -->
	<!-- <aop:aspectj-autoproxy/> -->
	
	<!-- bean 配置目前大多数配置非业务类的系统级别的文件参数和复制 -->
	   <!-- Spring中引入其他配置文件 -->
    <import resource="classpath*:/datasource.xml" />


	 

	



	
  
</beans>